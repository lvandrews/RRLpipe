## Command autocompletion file for RRLpipe

RRLpipe()
{
  local cur prev opts base
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"

  ## Basic options to autocomplete
  opts="configure print_config check check_result help
	phix_filtering strip_primers test
	test_result tutorial
	update
        "

  ## Complete available RRLpipe command arguments
  case $prev in
	RRLpipe)
	  COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
	  ;;

  ## Complete options to select commands
	pick_otus)
	  local otu="16S ITS other help"
	  COMPREPLY=( $(compgen -W "${otu}" -- ${cur}) )
	  ;;
	align_and_tree)
	  local align="16S other help"
	  COMPREPLY=( $(compgen -W "${align}" -- ${cur}) )
	  ;;
	format_database)
	  local sub="help"
	  COMPREPLY=( $(compgen -W "${sub}" -- ${cur}) )
	  ;;
	strip_primers)
	  local sub="help 0 1 2"
	  COMPREPLY=( $(compgen -W "${sub}" -- ${cur}) )
	  ;;
	primer_file)
	  local sub=""
	  COMPREPLY=( $(compgen -W "${sub}" -- ${cur}) )
	  ;;
	phix_filtering)
	  local sub="help"
	  COMPREPLY=( $(compgen -W "${sub}" -- ${cur}) )
	  ;;
	join_paired_reads)
	  local sub="help"
	  COMPREPLY=( $(compgen -W "${sub}" -- ${cur}) )
	  ;;
	configure)
	  local sub="Reference Taxonomy Tree Chimeras
		Alignment_template Alignment_lanemask BLAST_evalue
		Split_libraries_qvalue Split_libraries_minpercent
		Split_libraries_maxbad Prefix_length
		Suffix_length OTU_picker Tax_assigner
		Rarefaction_depth CPU_cores Multx_errors
		ITSx_options Cutadapt_errors help"
	  COMPREPLY=( $(compgen -W "${sub}" -- ${cur}) )
	  ;;
  esac
  return 0
}
complete -o default -F _RRLpipe RRLpipe
